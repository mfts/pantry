distributable:
  url: https://github.com/besser82/libxcrypt/archive/refs/tags/v{{version}}.tar.gz
  strip-components: 1

# if thereâ€™s a github then we can parse the versions
versions:
  github: besser82/libxcrypt/tags  # reads github tags from github
  strip: /^v/

build:
  dependencies:
    tea.xyz/gx/cc: c99
    tea.xyz/gx/make: '*'
    gnu.org/autoconf: '*'
    gnu.org/automake: '*'
    gnu.org/libtool: '*'
    freedesktop.org/pkg-config: '*'
  script: |
    ./autogen.sh
    ./configure $ARGS
    make --jobs {{ hw.concurrency }} 
    make install
  env:
    # add any environment variables here
    ARGS:
      - --prefix="{{prefix}}"
      - --disable-static
      - --disable-obsolete-api
      - --disable-xcrypt-compat-files
      - --disable-valgrind
      - --disable-failure-tokens


test:
  fixture: |
    #include <crypt.h>
    #include <errno.h>
    #include <stdio.h>
    #include <string.h>
    int main()
    {
      char *hash = crypt("abc", "$2b$05$abcdefghijklmnopqrstuu");
      if (errno) {
        fprintf(stderr, "Received error: %s", strerror(errno));
        return errno;
      }
      if (hash == NULL) {
        fprintf(stderr, "Hash is NULL");
        return -1;
      }
      if (strcmp(hash, "$2b$05$abcdefghijklmnopqrstuuRWUgMyyCUnsDr8evYotXg5ZXVF/HhzS")) {
        fprintf(stderr, "Unexpected hash output");
        return -1;
      }
      return 0;
    }
  dependencies:
    tea.xyz/gx/cc: c99
  script: |
    mv $FIXTURE test.c
    cc test.c -lcrypt
    ./a.out
